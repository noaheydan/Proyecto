{"remainingRequest":"C:\\Users\\Noah Eydan\\Documents\\Poli\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Noah Eydan\\Documents\\Poli\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Noah Eydan\\Documents\\Poli\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Noah Eydan\\Documents\\Poli\\frontend\\src\\views\\professor\\Courses.vue?vue&type=template&id=5e2a2d4e&","dependencies":[{"path":"C:\\Users\\Noah Eydan\\Documents\\Poli\\frontend\\src\\views\\professor\\Courses.vue","mtime":1649220549473},{"path":"C:\\Users\\Noah Eydan\\Documents\\Poli\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649220384704},{"path":"C:\\Users\\Noah Eydan\\Documents\\Poli\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1649220507020},{"path":"C:\\Users\\Noah Eydan\\Documents\\Poli\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649220384704},{"path":"C:\\Users\\Noah Eydan\\Documents\\Poli\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1649220506974}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}